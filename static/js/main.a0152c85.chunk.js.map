{"version":3,"sources":["components/header/Logo.js","components/header/Header.js","hooks/useBudgetFormValidation.js","components/content/forms/BudgetForm.js","hooks/useExpenseFormValidation.js","components/content/forms/ExpenseForm.js","hooks/useWindowSize.js","components/content/forms/ColapseWrapper.js","components/content/BalanceView.js","hooks/useBalance.js","components/content/Expense.js","components/content/SortSelect.js","components/modal/Modal.js","components/content/ExpensesView.js","hooks/useLocalStorage.js","components/content/Content.js","hooks/useExpenses.js","hooks/useBudget.js","App.js","index.js"],"names":["Logo","className","fontSize","Header","useBudgetFormValidation","budget","initialErrors","budgetNotSet","budgetNegative","useState","errors","setErrors","realTimeValidation","setRealTimeValidation","isMount","useRef","useEffect","handler","current","validate","resetErrors","BudgetForm","setBudget","budgetValue","setBudgetValue","id","htmlFor","type","onChange","e","target","value","onClick","preventDefault","parseFloat","useExpenseFormValidation","expenseTitle","expenseValue","expenseTitleNotSet","expenseValueNotSet","callback","validateTitle","validateValue","titleIsValid","valueIsValid","ExpenseForm","handleOnSubmit","expenseToEdit","title","setExpenseTitle","setExpenseValue","date","format","expenseDate","setExpenseDate","minLength","Date","require","getCurrentWindowSize","vw","window","innerWidth","vh","innerHeight","ColapseWrapper","maxWidth","children","currentWindowSize","windowSize","setWindowSize","handleWindowResize","addEventListener","removeEventListener","useWindowSize","renderForm","setRenderForm","render","BalanceView","expenses","calculateTotalCost","reduce","total","expense","calculateBalance","useBalance","Expense","editExpense","removeExpense","cursor","sortDirections","SortSelect","sortFunctions","sortAfterInsertion","sortAfterTitle","sortAfterValue","sortAfterDate","isAscending","setIsAscending","Object","keys","sortKey","setSortKey","map","option","Modal","close","ExpensesView","renderModal","setRenderModal","setExpenseToEdit","useLocalStorage","key","data","save","localStorage","setItem","JSON","stringify","load","parse","getItem","clear","Content","setExpenses","savedExpenses","err","console","log","addExpense","prevExpenses","uniqid","timestamp","now","filter","asc","sort","a","b","localeCompare","useExpenses","budgetObj","useBudget","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0152c85.chunk.js","sourcesContent":["import React from \"react\"\nimport { MdAccountBalanceWallet } from \"react-icons/md\"\n\nconst Logo = () => {\n    return (\n        <h1 className=\"logo\"><span><MdAccountBalanceWallet fontSize=\"1.5rem\" /> Budget App</span></h1>\n    )\n}\n\nexport { Logo }","import React from \"react\"\nimport { Logo } from \"./Logo\"\nimport \"./Header.css\"\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <Logo />\n        </div>\n    )\n}\n\nexport { Header }","import { useEffect, useRef, useState } from \"react\"\n\nconst useBudgetFormValidation = (budget) => {\n    const initialErrors = {\n        budgetNotSet: \"\",\n        budgetNegative: \"\",\n    };\n    const [errors, setErrors] = useState(initialErrors);\n    const [realTimeValidation, setRealTimeValidation] = useState(false);\n\n    const isMount = useRef(true);\n    const onlyOnUpdate = (handler) => {\n        if (isMount.current) {\n            isMount.current = false;\n        } else {\n            handler();\n        }\n    }\n\n    useEffect(() => {\n        onlyOnUpdate(() => setRealTimeValidation(true));\n        realTimeValidation && validate();\n    }, [budget]);\n\n    const resetErrors = () => {\n        setErrors(initialErrors);\n        setRealTimeValidation(false);\n    }\n\n    const validate = () => {\n        let budgetNotSet = \"\";\n        let budgetNegative = \"\";\n\n        if (budget === \"\") {\n            budgetNotSet = \"Enter a Budget\";\n        }\n        if (budget < 0) {\n            budgetNegative = \"Budget can't be negative\";\n        }\n        setErrors({\n            budgetNotSet,\n            budgetNegative,\n        });\n        return !budgetNotSet && !budgetNegative;\n    }\n\n    return {\n        errors,\n        resetErrors,\n        validate,\n    }\n}\n\nexport { useBudgetFormValidation }","import React, { useState } from \"react\"\nimport { useBudgetFormValidation } from \"../../../hooks/useBudgetFormValidation\"\nimport \"./BudgetForm.css\"\n\nconst BudgetForm = ({ setBudget }) => {\n    const [budgetValue, setBudgetValue] = useState(\"\");\n    const { errors, resetErrors, validate } = useBudgetFormValidation(budgetValue);\n\n    const reset = () => {\n        setBudgetValue(\"\");\n        resetErrors();\n    }\n\n    const submit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (isValid) {\n            setBudget(parseFloat(budgetValue));\n            reset();\n        }\n    }\n\n    return (\n        <form id=\"budget-form\" className=\"form\">\n            <div className=\"input\">\n                <label htmlFor=\"budget-input\">Please enter your Budget</label>\n                {errors.budgetNotSet && <p className=\"error\">{errors.budgetNotSet}</p>}\n                {errors.budgetNegative && <p className=\"error\">{errors.budgetNegative}</p>}\n                <input\n                    id=\"budget-input\"\n                    type=\"number\"\n                    onChange={(e) => setBudgetValue(e.target.value)}\n                    value={budgetValue}\n                />\n            </div>\n            <div className=\"submit\">\n                <button type=\"submit\" onClick={submit}>Calculate</button>\n            </div>\n        </form>\n    )\n}\n\nexport { BudgetForm }","import { useEffect, useRef, useState } from \"react\";\n\nconst useExpenseFormValidation = (expenseTitle, expenseValue) => {\n    const initialErrors = {\n        expenseTitleNotSet: \"\",\n        expenseValueNotSet: \"\",\n    };\n    const [errors, setErrors] = useState(initialErrors);\n    const [realTimeValidation, setRealTimeValidation] = useState(false);\n\n    const isMount = useRef(true);\n    const onlyOnUpdate = (callback) => {\n        if (isMount.current) {\n            isMount.current = false;\n        } else {\n            callback();\n        }\n    }\n\n    useEffect(()=> {\n        onlyOnUpdate(() => setRealTimeValidation(true));\n    }, [expenseTitle, expenseValue])\n\n    useEffect(() => {\n        realTimeValidation && validateTitle();\n    }, [expenseTitle]);\n\n    useEffect(() => {\n        realTimeValidation && validateValue();\n    }, [expenseValue]);\n\n    const resetErrors = () => {\n        setErrors(initialErrors);\n        setRealTimeValidation(false);\n    }\n\n    const validateTitle = () => {\n        let expenseTitleNotSet = \"\";\n        if (expenseTitle === \"\") {\n            expenseTitleNotSet = \"Enter a title\";\n        }\n        setErrors(errors => ({\n            ...errors,\n            expenseTitleNotSet,\n        }));\n        return !expenseTitleNotSet;\n    }\n\n    const validateValue = () => {\n        let expenseValueNotSet = \"\";\n        if (expenseValue === \"\") {\n            expenseValueNotSet = \"Enter a amount value\";\n        }\n        setErrors(errors => ({\n            ...errors,\n            expenseValueNotSet,\n        }));\n        return !expenseValueNotSet;\n    }\n\n    const validate = () => {\n        const titleIsValid = validateTitle();\n        const valueIsValid = validateValue();\n        return titleIsValid && valueIsValid;\n    }\n\n    return {\n        errors,\n        resetErrors,\n        validate,\n    }\n}\n\nexport { useExpenseFormValidation }","import React, { useState } from \"react\"\nimport { useExpenseFormValidation } from \"../../../hooks/useExpenseFormValidation\"\nimport { format } from \"date-fns\"\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = ({ handleOnSubmit, expenseToEdit }) => {\n    const [expenseTitle, setExpenseTitle] = useState(expenseToEdit ? expenseToEdit.title : \"\");\n    const [expenseValue, setExpenseValue] = useState(expenseToEdit ? expenseToEdit.value : \"\");\n    const [expenseDate, setExpenseDate] = useState(expenseToEdit?.date ? format(expenseToEdit.date, \"yyyy-MM-dd\") : \"\");\n    const { errors, resetErrors, validate } = useExpenseFormValidation(expenseTitle, expenseValue);\n\n    const reset = () => {\n        setExpenseTitle(\"\");\n        setExpenseValue(\"\");\n        setExpenseDate(\"\");\n        resetErrors();\n    }\n\n    const submit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (isValid) {\n            handleOnSubmit(\n                expenseTitle,\n                parseFloat(expenseValue),\n                expenseDate !== \"\" ? new Date(expenseDate) : null,\n            );\n            reset();\n        }\n    }\n\n    return (\n        <form id=\"expense-form\">\n            <div className=\"input\">\n                <label htmlFor=\"expense-title-input\">Please enter a Expense</label>\n                {errors.expenseTitleNotSet && <p className=\"error\">{errors.expenseTitleNotSet}</p>}\n                <input\n                    id=\"expense-title-input\"\n                    type=\"text\"\n                    onChange={(e) => setExpenseTitle(e.target.value)}\n                    value={expenseTitle}\n                    minLength=\"1\"\n                />\n            </div>\n            <div className=\"input\">\n                <label htmlFor=\"expense-amount-input\">Please enter the Expense amount</label>\n                {errors.expenseValueNotSet && <p className=\"error\">{errors.expenseValueNotSet}</p>}\n                <input\n                    id=\"expense-amount-input\"\n                    type=\"number\"\n                    onChange={(e) => setExpenseValue(e.target.value)}\n                    value={expenseValue}\n                />\n            </div>\n            <div className=\"input\">\n                <label htmlFor=\"expense-date-input\">Enter a date of the expense</label>\n                <input\n                    id=\"expense-date-input\"\n                    type=\"date\"\n                    onChange={(e) => setExpenseDate(e.target.value)}\n                    value={expenseDate}\n                />\n            </div>\n            <div className=\"submit\">\n                <button type=\"submit\" onClick={submit}>{expenseToEdit ? \"Save changes\" : \"Add Expense\"}</button>\n            </div>\n        </form>\n    )\n}\n\nexport { ExpenseForm }","const { useState, useEffect } = require(\"react\")\n\nconst getCurrentWindowSize = () => {\n    return {\n        vw: window.innerWidth,\n        vh: window.innerHeight,\n    }\n}\n\nconst useWindowSize = () => {\n    const [windowSize, setWindowSize] = useState(getCurrentWindowSize());\n\n    const handleWindowResize = () => {\n        setWindowSize(getCurrentWindowSize());\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", handleWindowResize);\n        return () => {\n            window.removeEventListener(\"resize\", handleWindowResize);\n        }\n    }, []);\n\n    return windowSize;\n}\n\nexport { useWindowSize }","import { useState } from \"react\"\nimport { useWindowSize } from \"../../../hooks/useWindowSize\"\nimport { RiArrowDownSLine, RiArrowUpSLine } from \"react-icons/ri\"\n\nconst ColapseWrapper = ({ title, maxWidth, children }) => {\n    const currentWindowSize = useWindowSize();\n    const [renderForm, setRenderForm] = useState(false);\n\n    if (currentWindowSize.vw > maxWidth) {\n        return children;\n    }\n\n    return (\n        <div className=\"colapse-wrapper\">\n            <div className=\"colapse-wrapper-header\" onClick={() => setRenderForm(render => !render)}>\n                <p className=\"colapse-wrapper-title\" >{title}</p>\n                {renderForm ? <RiArrowUpSLine fontSize=\"1.25rem\" /> : <RiArrowDownSLine fontSize=\"1.25rem\" />}\n            </div>\n            {renderForm && children}\n        </div>\n    )\n}\n\nexport { ColapseWrapper }","import React from \"react\"\nimport { useBalance } from \"../../hooks/useBalance\"\nimport { FaMoneyBillAlt } from \"react-icons/fa\"\nimport { AiOutlineEuro, AiOutlineCreditCard } from \"react-icons/ai\"\nimport \"./BalanceView.css\"\n\nconst BalanceView = ({ budget, expenses }) => {\n    const { calculateBalance, calculateTotalCost } = useBalance(expenses, budget);\n    return (\n        <div className=\"balance-view\">\n            <div className=\"budget\">\n                <h3 className=\"budget-label\">Budget</h3>\n                <FaMoneyBillAlt fontSize=\"3rem\" />\n                <p id=\"budget-output-amount\">{budget}</p>\n            </div>\n            <div className=\"expenses\">\n                <h3 className=\"expenses-label\">Expenses</h3>\n                <AiOutlineCreditCard fontSize=\"3rem\" />\n                <p id=\"expenses-output-amount\">{calculateTotalCost()}</p>\n            </div>\n            <div className=\"balance\">\n                <h3 className=\"balance-label\">Balance</h3>\n                <AiOutlineEuro fontSize=\"3rem\" />\n                <p id=\"balance-output-amount\">{calculateBalance()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport { BalanceView }","const useBalance = (expenses, budget) => {\n    const calculateTotalCost = () => {\n        return expenses.reduce((total, expense) => {\n            return total + expense.value;\n        }, 0);\n    }\n\n    const calculateBalance = () => {\n        return budget - calculateTotalCost();\n    }\n\n    return {\n        calculateTotalCost,\n        calculateBalance,\n    }\n}\n\nexport { useBalance }","import React from \"react\"\nimport { TiEdit, TiDelete, } from \"react-icons/ti\"\nimport { format } from \"date-fns\"\nimport \"./ExpensesView.css\"\n\nconst Expense = ({ title, value, date, editExpense, removeExpense }) => {\n    return (\n        <div className=\"expense-item\">\n            <p className=\"expense-item-title\">{title}</p>\n            <p className=\"expense-item-value\">{value}</p>\n            <p className=\"expense-item-date\">{date ? format(date, \"dd.MM.yyyy\") : \"\"}</p>\n            <div className=\"expense-item-actions\">\n                <TiEdit className=\"expense-item-icon\" onClick={editExpense} cursor=\"pointer\" />\n                <TiDelete className=\"expense-item-icon\" onClick={removeExpense} cursor=\"pointer\" />\n            </div>\n        </div>\n    )\n}\n\nexport { Expense }","import { useEffect, useMemo, useState } from \"react\";\n\nconst sortDirections = {\n    \"asc\": true,\n    \"desc\": false,\n}\n\nconst SortSelect = ({ sortAfterInsertion, sortAfterTitle, sortAfterValue, sortAfterDate }) => {\n    const sortFunctions = {\n        \"...\": sortAfterInsertion,\n        \"Title\": sortAfterTitle,\n        \"Value\": sortAfterValue,\n        \"Date\": sortAfterDate,\n    };\n\n    const [isAscending, setIsAscending] = useState(true);\n    const [sortKey, setSortKey] = useState(Object.keys(sortFunctions)[0]);\n\n    useEffect(() => {\n        sortFunctions[sortKey](isAscending);\n    }, [sortKey, isAscending]);\n\n    return (\n        <div className=\"sort-expense\">\n            <select\n                className=\"sort-expense-sort-direction\"\n                onChange={(e) => setIsAscending(sortDirections[e.target.value])}\n            >\n                {\n                    Object.keys(sortDirections)\n                        .map((option) =>\n                            <option key={option}>{option}</option>\n                        )\n                }\n            </select>\n            <select\n                className=\"sort-expense-select\"\n                onChange={(e) => setSortKey(e.target.value)}\n            >\n                {\n                    Object.keys(sortFunctions).map((option) =>\n                        <option key={option} >{option}</option>\n                    )\n                }\n            </select>\n        </div>\n    )\n}\n\nexport { SortSelect }","import React from \"react\"\nimport \"./Modal.css\"\n\nconst Modal = ({ title, render, close, children }) => {\n    if (!render) {\n        return null;\n    }\n    return (\n        <div className=\"backdrop\" >\n            <div className=\"modal\">\n                <div className=\"modal-header\">\n                    <h3>{title}</h3>\n                    <span className=\"modal-close\" onClick={close}>X</span>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"close-btn\" onClick={close}>Close</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport { Modal }","import React, { useState } from \"react\"\nimport { Expense } from \"./Expense\"\nimport { SortSelect } from \"./SortSelect\"\nimport { Modal } from \"../modal/Modal\"\nimport { ExpenseForm } from \"./forms/ExpenseForm\"\nimport \"./ExpensesView.css\"\n\nconst ExpensesView = ({ expenses, editExpense, removeExpense, sortAfterInsertion, sortAfterTitle, sortAfterValue, sortAfterDate }) => {\n    const [renderModal, setRenderModal] = useState(false);\n    const [expenseToEdit, setExpenseToEdit] = useState(null);\n    return (\n        <div className=\"expenses-view\">\n            <div className=\"expenses-view-header\">\n                <h3>Expense</h3>\n                <h3>Value</h3>\n                <h3>Date</h3>\n                <SortSelect\n                    sortAfterInsertion={sortAfterInsertion}\n                    sortAfterTitle={sortAfterTitle}\n                    sortAfterValue={sortAfterValue}\n                    sortAfterDate={sortAfterDate}\n                />\n            </div>\n            {\n                expenses.map((expense) =>\n                    <Expense\n                        key={expense.id}\n                        title={expense.title}\n                        value={expense.value}\n                        date={expense.date}\n                        editExpense={() => {\n                            setExpenseToEdit(expense);\n                            setRenderModal(true);\n                        }}\n                        removeExpense={() => removeExpense(expense.id)}\n                    />\n                )\n            }\n            <Modal title={expenseToEdit?.title} render={renderModal} close={() => setRenderModal(false)}>\n                <ExpenseForm\n                    handleOnSubmit={(title, value, date) => {\n                        editExpense(expenseToEdit.id, title, value, date);\n                        setRenderModal(false);\n                    }}\n                    expenseToEdit={expenseToEdit}\n                />\n            </Modal>\n        </div>\n    )\n}\n\nexport { ExpensesView }","\nconst useLocalStorage = (key, data) => {\n    const save = () => {\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    const load = () => {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    const clear = () => {\n        localStorage.clear();\n    }\n\n    return {\n        save,\n        load,\n        clear,\n    }\n}\n\nexport { useLocalStorage }","import React from \"react\"\nimport { BudgetForm } from \"./forms/BudgetForm\"\nimport { ExpenseForm } from \"./forms/ExpenseForm\"\nimport { ColapseWrapper } from \"./forms/ColapseWrapper\"\nimport { BalanceView } from \"./BalanceView\"\nimport { ExpensesView } from \"./ExpensesView\"\nimport { useExpenses } from \"../../hooks/useExpenses\"\nimport { useBudget } from \"../../hooks/useBudget\"\nimport \"./Content.css\"\n\n// const pixelValStr = getComputedStyle(document.documentElement)\n//     .getPropertyValue(\"--mobile-view-width\");\n// const mobileViewPortWidth = parseInt(pixelValStr.substr(pixelValStr.length - 3));\nconst MOBILE_VIEW_PORT = 1400;\n\nconst Content = () => {\n    const {\n        expenses,\n        addExpense,\n        editExpense,\n        removeExpense,\n        sortAfterInsertion,\n        sortAfterTitle,\n        sortAfterValue,\n        sortAfterDate,\n    } = useExpenses();\n\n    const {\n        budget,\n        setBudget\n    } = useBudget();\n\n    return (\n        <div className=\"content\">\n            <div className=\"content-input\">\n                <ColapseWrapper title=\"Set Budget\" maxWidth={MOBILE_VIEW_PORT} >\n                    <BudgetForm setBudget={setBudget} />\n                </ColapseWrapper>\n                <ColapseWrapper title=\"Add Expense\" maxWidth={MOBILE_VIEW_PORT} >\n                    <ExpenseForm handleOnSubmit={addExpense} />\n                </ColapseWrapper>\n            </div>\n            <div className=\"content-output\">\n                <BalanceView budget={budget} expenses={expenses} />\n                <ExpensesView\n                    expenses={expenses}\n                    editExpense={editExpense}\n                    removeExpense={removeExpense}\n                    sortAfterInsertion={sortAfterInsertion}\n                    sortAfterTitle={sortAfterTitle}\n                    sortAfterValue={sortAfterValue}\n                    sortAfterDate={sortAfterDate}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport { Content }","import { useEffect, useState } from \"react\"\nimport { useLocalStorage } from \"./useLocalStorage\"\nimport uniqid from \"uniqid\"\n\nconst useExpenses = () => {\n    const [expenses, setExpenses] = useState([]);\n    const { save, load } = useLocalStorage(\"expenses\", expenses);\n\n    useEffect(() => {\n        try {\n            const savedExpenses = load();\n            setExpenses(\n                savedExpenses\n                    ? savedExpenses\n                        .map((expense) => ({\n                            ...expense,\n                            date: expense.date ? new Date(expense.date) : null\n                        }))\n                    : []\n            );\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    useEffect(() => {\n        save();\n    }, [expenses]);\n\n    const addExpense = (title, value, date) => {\n        setExpenses(\n            prevExpenses => [\n                ...prevExpenses,\n                {\n                    id: uniqid(),\n                    title,\n                    value,\n                    date,\n                    timestamp: Date.now(),\n                }\n            ]\n        );\n    }\n\n    const editExpense = (id, title, value, date) => {\n        setExpenses(\n            prevExpenses => prevExpenses\n                .map((expense) => expense.id === id\n                    ? { ...expense, title, value, date, }\n                    : expense)\n        );\n    }\n\n    const removeExpense = (id) => {\n        setExpenses(\n            prevExpenses => prevExpenses\n                .filter((expense) => expense.id !== id)\n        );\n    }\n\n    const sortAfterInsertion = (asc = true) => {\n        return setExpenses(\n            expenses =>\n                asc\n                    ? [...expenses].sort((a, b) => a.timestamp - b.timestamp)\n                    : [...expenses].sort((a, b) => b.timestamp - a.timestamp)\n        )\n    }\n\n    const sortAfterTitle = (asc = true) => {\n        setExpenses(\n            expenses =>\n                asc\n                    ? [...expenses].sort((a, b) => a.title.localeCompare(b.title))\n                    : [...expenses].sort((a, b) => b.title.localeCompare(a.title))\n        );\n    }\n\n    const sortAfterValue = (asc = true) => {\n        setExpenses(\n            expenses =>\n                asc\n                    ? [...expenses].sort((a, b) => a.value - b.value)\n                    : [...expenses].sort((a, b) => b.value - a.value)\n        );\n    }\n\n    const sortAfterDate = (asc = true) => {\n        setExpenses(\n            expenses =>\n                asc\n                    ? [...expenses].sort((a, b) => a.date - b.date)\n                    : [...expenses].sort((a, b) => b.date - a.date)\n        );\n    }\n\n    return {\n        expenses,\n        addExpense,\n        editExpense,\n        removeExpense,\n        sortAfterInsertion,\n        sortAfterTitle,\n        sortAfterValue,\n        sortAfterDate,\n    }\n}\n\nexport { useExpenses }","import { useEffect, useState } from \"react\"\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst useBudget = () => {\n    const [budget, setBudget] = useState(0);\n    const { save, load } = useLocalStorage(\"budget\", { budget });\n\n    useEffect(() => {\n        try {\n            const budgetObj = load();\n            setBudget(\n                budgetObj ? budgetObj.budget : 0\n            );\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    useEffect(() => {\n        save();\n    }, [budget]);\n\n    return {\n        budget, setBudget,\n    }\n}\n\nexport { useBudget }","import { Header } from \"./components/header/Header\"\nimport { Content } from \"./components/content/Content\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}